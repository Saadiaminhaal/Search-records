//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace fetching_btw_two_prices
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class fetching_btw_two_pricesEntities : DbContext
    {
        public fetching_btw_two_pricesEntities()
            : base("name=fetching_btw_two_pricesEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Employeee> Employeees { get; set; }
    
        public virtual ObjectResult<emp_details_Result> emp_details(Nullable<double> start, Nullable<double> end)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(double));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<emp_details_Result>("emp_details", startParameter, endParameter);
        }
    
        public virtual ObjectResult<Employeee> GetFunctionEmp(Nullable<double> start, Nullable<double> end)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(double));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Employeee>("GetFunctionEmp", startParameter, endParameter);
        }
    
        public virtual ObjectResult<Employeee> GetFunctionEmp(Nullable<double> start, Nullable<double> end, MergeOption mergeOption)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(double));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Employeee>("GetFunctionEmp", mergeOption, startParameter, endParameter);
        }
    }
}
